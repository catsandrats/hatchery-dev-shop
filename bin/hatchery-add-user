#!/usr/bin/env sh

# creates a user with a default django project on a given port
# @author: Dana Spiegel <dana@sociabledesign.com>

safe() { "$@" || barf "cannot: $*; aborting"; }
barf() { shout "$*"; exit 111; }
shout() { echo "${0##*/}: $*" >&2; }

USAGE="$0 [[[-u username] [-p port]] | [-h]]"

OLDDIR=`pwd`
USER=
PORT=

while [ "$1" != "" ]; do
    case $1 in
        -u | --user )
            shift
            USER=$1
            ;;
        -p | --port )
            shift
            PORT=$1
            ;;
        -h | --help )
            shout $USAGE
            exit 0
            ;;
        * )
            barf $USAGE
    esac
    shift
done

[ "$USER" ] || usage
[ "$PORT" ] || usage

# create the user
id $USER > /dev/null 2>&1
[ $? = 0 ] && barf "User $USER already exists"
safe sudo adduser --disabled-password --ingroup hatchery $USER

# create the django project
SECRET_KEY=`python -c 'import random; print "".join([random.choice("abcdefghijklmnopqrstuvwxyz0123456789!@#$%^*(-_=+)") for i in range(50)])'`
safe cd /home/$USER
safe sudo -u $USER env django-admin.py startproject project
safe cd project/project
safe echo "
from django.conf.urls import patterns, include, url
from django.views.generic.simple import direct_to_template

from django.contrib import admin
admin.autodiscover()

urlpatterns = patterns('',
    url(r'^$', direct_to_template, { 'template': 'index.html' }, name='home'),
    url(r'^admin/', include(admin.site.urls)),
)
" | sudo -u $USER tee urls.py > /dev/null
safe echo "
import os
import os.path
import sys

PROJECT_PATH = os.path.abspath(os.path.split(os.path.split(__file__)[0])[0])
APPSERVER = os.uname()[1]

DEBUG = True
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)
MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(PROJECT_PATH, 'sqlite.db'),
    }
}

TIME_ZONE = 'UTC'
SITE_ID = 1
LANGUAGE_CODE = 'en-us'
USE_I18N = True
USE_L10N = True
USE_TZ = True

MEDIA_ROOT = os.path.join(PROJECT_PATH, 'media')
MEDIA_URL = '/media/'
STATIC_ROOT = os.path.join(PROJECT_PATH, 'static')
STATIC_URL = '/static/'
STATICFILES_DIRS = ()
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

SECRET_KEY='$SECRET_KEY'

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
)

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

ROOT_URLCONF = 'project.urls'

TEMPLATE_DIRS = (os.path.join(PROJECT_PATH, 'templates'),)

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admin',
)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
    },
    'handlers': {
        'null': {
            'level':'DEBUG', 'class':'django.utils.log.NullHandler',
        },
        'console':{
            'level':'DEBUG', 'class':'logging.StreamHandler', 'formatter': 'verbose'
        },
        'mail_admins': {
            'level': 'ERROR', 'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        'django': {
            'handlers':['console'], 'level':'DEBUG', 'propagate': True,
        },
        'django.request': {
            'handlers': ['mail_admins'], 'level': 'ERROR', 'propagate': False,
        },
    }
}
" | sudo -u $USER tee settings.py > /dev/null
cd ..
safe sudo -u $USER mkdir /home/$USER/project/media
safe sudo -u $USER mkdir /home/$USER/project/static
safe sudo -u $USER mkdir /home/$USER/project/templates
safe sudo -u $USER python manage.py syncdb --noinput
shout "Created project in /home/$USER/project/ with sqlite database"
shout "Be sure to run python manage.py createsuperuser to create a new superuser for the project"
safe cd $OLDDIR

# execute nginx-config
safe ./hatchery-add-site -u $USER -p $PORT

# add port to profile for user